name: edge release

on:
  push:
    branches: [ "main" ]
    
env:
  commit: ${{ github.sha }}

jobs:
  # prechecks the project version inside VERSION file and outputs it as a job output
  precheck:
    name: Precheck
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.precheck.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Precheck
        id: precheck
        run: |
          version=$(cat VERSION)
          echo "::set-output name=version::$version"
          echo "Version: $version"

  release:
    name: Edge Release
    needs: [precheck]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          fetch-depth: 0
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: stage -Pversion=${{ needs.precheck.outputs.VERSION }}+${{ env.commit }}

      # Create a release

      - name: Run JReleaser
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_PRERELEASE: true
          JRELEASER_PROJECT_SNAPSHOT_FULL_CHANGELOG: false
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}+${{ env.commit }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
      - name: Publish to GitHub Packages
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: publish -Pversion=${{ needs.precheck.outputs.VERSION }}+${{ env.commit }}
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Persist logs

      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties